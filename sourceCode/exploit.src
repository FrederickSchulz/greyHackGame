if params.len < 4 or params.len > 5 or params[0] == "-h" or params[0] == "--help" then exit("<b>Usage: "+program_path.split("/")[-1]+" [ip_address] [port] [MEM_address] [exploit] (aditionalArgs/newPassword)</b>")
metaxploit = include_lib("/lib/metaxploit.so")
if not metaxploit then
    metaxploit = include_lib(current_path + "/metaxploit.so")
end if
if not metaxploit then exit("Error: Can't find metaxploit library in the /lib path or the current folder")
address = params[0]
port = params[1].to_int
net_session = null
if port == 0 then 
	net_session = metaxploit.net_use( address, port )
else
	net_session = metaxploit.net_use( address, port )
end if
if not net_session then exit("Error: can't connect to net session")
metaLib = net_session.dump_lib
if params.len == 4 then
	result = metaLib.overflow(params[2], params[3])
else
	result = metaLib.overflow(params[2], params[3], params[4])
end if
if not result then exit("Program ended")
if typeof(result) == "shell" then
	result.start_terminal
else if typeof(result) == "file" then
	if not result.is_folder then 
		print("Obtained file: " + result.name)
		print("With content:")
		print(result.get_content)
	else
		print("Obtained folder: " + result.name)
		if result.name == "home" or result.name == "sys" or result.name == "usr" then
			// print name of user folders
			print("folders in " + result.name + " are:")
			folders = result.get_folders
			for folder in folders
				print(folder.name)
			end for
			// print file names
			print("files in " + result.name + " are:")
			files = result.get_files
			for file in files
				print(file.name)
			end for
			// get etc/passwd
			print("trying to get etc/passwd...")
			parentfolders = result.parent.get_folders
			for parentfolder in parentfolders
				// print password file
				if parentfolder.name == "etc" then
					etcFiles = parentfolder.get_files
					for etcFile in etcFiles
						if etcFile.name == "passwd" then print(etcFile.get_content)
					end for
				break
				end if
			end for
		else if result.name == "lib" then
			print("trying to get etc/passwd...")
			parentfolders = result.parent.get_folders
			for parentfolder in parentfolders
				// print password file
				if parentfolder.name == "etc" then
					etcFiles = parentfolder.get_files
					for etcFile in etcFiles
						if etcFile.name == "passwd" then print(etcFile.get_content)
					end for
				break
				end if
			end for
		else if result.name == "etc" then
			// print password file
			print("trying to get etc/passwd...")
			files = result.get_files
			for file in files
				if etcFile.name == "passwd" then print(etcFile.get_content)
			end for
		end if
	end if
else if typeof(result) == "computer" then
	file = result.File("/etc/passwd")
	if not file then exit("Error: file /etc/passwd not found")
	if not file.has_permission("r") then exit("Error: can't read /etc/passwd. Permission denied.")
	if file.is_binary then exit("Error: invalid /etc/passwd file found.")
	print(file.get_content)
else if typeof(result) == "shell" then
	result.start_terminal
else
	print("Error: result is unhandled object type, obtained: " + result)
end if